name: Continuous Integration

on:
  pull_request:
    branches:
      - main
      - workflow-test

        
   jobs:
  cypress-tests:
    runs-on: self-hosted  # This job uses the self-hosted runner
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    - name: Set Execution Policy
      run: Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process
      shell: powershell
    - name: Install dependencies for client and server
      run: |
        cd client
        npm install
        cd ../server
        npm install
        cd ../testing
        npm install
        npm install cypress
      shell: powershell
    - name: Start MongoDB
      run: |
        mongosh
      shell: powershell
    - name: Start client in background
      run: |
        Start-Job -ScriptBlock {
          cd client
          npm start
        }
      shell: powershell
    - name: Start server in background
      run: |
        Start-Job -ScriptBlock {
          cd server
          node ./server.js
        }
      shell: powershell
    - name: Wait for servers to start
      run: Start-Sleep -Seconds 10  # Wait 10 seconds to ensure servers are up
      shell: powershell
    - name: Run Cypress Tests
      run: |
        cd testing
        npx cypress run
      shell: powershell

  jest-tests:
    needs: cypress-tests  # Jest tests will wait for Cypress tests to complete
    runs-on: self-hosted  # Using your own self-hosted runner
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  # Ensure this matches the Node.js version you use
    - name: Set Execution Policy
      run: Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process
      shell: powershell
    - name: Install server dependencies
      run: |
        cd server
        npm install
      shell: powershell
    - name: Run Jest Tests
      run: |
        cd server
        npm run test
      shell: powershell
