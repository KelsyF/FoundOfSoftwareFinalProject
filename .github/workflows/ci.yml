name: Continuous Integration

on:
  pull_request:
    branches:
      - main
      - workflow-test

jobs:
  cypress-tests:
    runs-on: self-hosted  # This job uses the self-hosted runner
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    - name: Set Execution Policy
      run: Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process
      shell: powershell
    - name: Install dependencies for client and server
      run: |
        cd client
        npm install
        cd ../server
        npm install
      shell: powershell
    - name: Start client in background
      run: |
        Start-Job -ScriptBlock {
          cd client
          npm start
        }
      shell: powershell
    - name: Start server in background
      run: |
        Start-Job -ScriptBlock {
          cd server
          node ./server.js
        }
      shell: powershell
    - name: Check job statuses and output
    run: |
    # Wait briefly to allow background jobs to initialize properly
    Start-Sleep -Seconds 5

    # Display all job statuses
    Get-Job | Format-Table -AutoSize

    # Store all jobs in a variable
    $jobs = Get-Job

    # Iterate through each job to check its status and handle accordingly
    foreach ($job in $jobs) {
      # Check if the job is running and output its status
      if ($job.State -eq "Running") {
        Write-Output "Job $($job.Id) is still running."
      }
      elseif ($job.State -eq "Failed") {
        # If the job has failed, receive its output for diagnostics
        Write-Output "Job $($job.Id) has failed with the following output:"
        Receive-Job -Job $job | Write-Output

        # Remove the job to clean up resources
        Remove-Job -Job $job

        # Fail the step to stop the workflow as necessary
        exit 1
      }
    }
  shell: powershell

    - name: Wait for servers to start
      run: Start-Sleep -Seconds 10  # Wait 10 seconds to ensure servers are up
      shell: powershell
    - name: Install testing dependencies
      run: |
        cd testing
        npm install
      shell: powershell
    - name: Run Cypress Tests
      run: |
        cd testing
        npx cypress run
      shell: powershell
