name: Continuous Integration

on:
  pull_request:
    branches:
      - main
      - workflow-test

jobs:
  cypress-tests:
    runs-on: self-hosted
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Set Execution Policy
      run: Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process
      shell: powershell

    - name: Install dependencies in client directory
      run: npm install
      working-directory: client
      shell: powershell

    - name: Install dependencies in server directory
      run: npm install
      working-directory: server
      shell: powershell

    - name: Start client in background
      run: Start-Job -ScriptBlock { npm start }
      working-directory: client
      shell: powershell
      env:
        GITHUB_WORKSPACE: ${{ github.workspace }}

    - name: Start server in background
      run: Start-Job -ScriptBlock { node ./server.js }
      working-directory: server
      shell: powershell
      env:
        GITHUB_WORKSPACE: ${{ github.workspace }}

    - name: Verify client is operational
      run: |
        $success = $false
        $attempts = 0
        while (-not $success -and $attempts -lt 5) {
          try {
            $response = Invoke-WebRequest -Uri "http://localhost:3000" -UseBasicParsing
            if ($response.StatusCode -eq 200) {
              Write-Host "Client confirmed up - status code: $($response.StatusCode)"
              $success = $true
            }
            else {
              Write-Host "Client not up - status code: $($response.StatusCode), retrying..."
            }
          } catch {
            Write-Host "Error contacting client, retrying..."
          }
          Start-Sleep -Seconds 5
          $attempts++
        }
        if (-not $success) {
          Write-Error "Client is not up after several attempts."
          exit 1
        }
      working-directory: client
      shell: powershell

    - name: Install testing dependencies
      run: npm install
      working-directory: testing
      shell: powershell

    - name: Run Cypress Tests
      run: npx cypress run
      working-directory: testing
      shell: powershell

    - name: Clean-up
      run: |
        Stop-Process -Name "node" -Force
        Stop-Process -Name "npm" -Force
      shell: powershell
      if: always()  # Ensure cleanup happens regardless of previous step success
